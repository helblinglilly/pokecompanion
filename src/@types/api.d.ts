/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/pokemon/v1/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a Pokemon */
        get: operations["GetPokemon"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @enum {string} */
        PokeapiLanguageCodes: "ja-Hrkt" | "ja" | "ko" | "fr" | "de" | "en" | "es";
        PokemonMove: {
            /** Format: double */
            id: number;
            names: {
                name: string;
                language: {
                    url: string;
                    name: string;
                };
            }[];
            type: {
                url: string;
                name: string;
            };
            damage_class: {
                url: string;
                name: string;
            };
            /** Format: double */
            level?: number;
        };
        /** @enum {string} */
        PokeapiStatType: "hp" | "attack" | "defense" | "speed" | "special-attack" | "special-defense";
        PokemonV1Response: {
            pokemon: {
                /** Format: double */
                weight: number;
                /** Format: double */
                height: number;
                stats: {
                    url: string;
                    name: components["schemas"]["PokeapiStatType"];
                }[];
                forms: {
                    url: string;
                    name: string;
                }[];
                /** Format: double */
                base_experience: number;
                moves: {
                    [key: string]: {
                        tutorMoves: components["schemas"]["PokemonMove"][];
                        breedMoves: components["schemas"]["PokemonMove"][];
                        tmMoves: components["schemas"]["PokemonMove"][];
                        levelupMoves: components["schemas"]["PokemonMove"][];
                    };
                }[];
                varietyForms: {
                    name: string;
                }[];
                typeRelations: {
                    weakAgainst: {
                        /** Format: double */
                        multiplier: number;
                        url: string;
                        name: string;
                    }[];
                    resists: {
                        /** Format: double */
                        multiplier: number;
                        url: string;
                        name: string;
                    }[];
                };
                types: {
                    url: string;
                    icon: string;
                    name: string;
                }[];
                name: string;
                cries: {
                    legacy: string;
                    latest: string;
                };
                abilities: {
                    ability: {
                        url: string;
                        name: string;
                    };
                    /** Format: double */
                    slot: number;
                    is_hidden: boolean;
                }[];
            };
            /** @description Path to a .ogg file with this pokemon's cry */
            cry: string;
            /**
             * Format: double
             * @description Weight in grams
             */
            weight: number;
            /**
             * Format: double
             * @description Height in cm
             */
            height: number;
            pokedexEntries: {
                textEntry: string;
                game: string;
                language: components["schemas"]["PokeapiLanguageCodes"];
            }[];
            /** Format: double */
            id: number;
            __internal: unknown;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetPokemon: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Some stuff */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PokemonV1Response"];
                };
            };
        };
    };
}
